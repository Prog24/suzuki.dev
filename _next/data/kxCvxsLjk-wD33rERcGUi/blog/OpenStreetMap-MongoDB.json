{"pageProps":{"frontmatter":{"title":"OpenStreetMapのデータをMongoDBに入れる","date":"2020-05-11T10:00:00.000Z","template":"post","draft":false,"slug":"OpenStreetMap-MongoDB","category":"OpenStreetMap","tags":["OpenStreetMap","OSM","Python"],"description":"OpenStreetMapのデータをMongoDBに入れる"},"markdownBody":"\n[OpenStreetMap](https://www.openstreetmap.org/)のデータをMongoDBに入れてゴニョゴニョしたいと思ったが，なかなか方法が分からなかったので，行った方法をメモする\n\n\n[overpy](https://pypi.org/project/overpy/)というライブラリを使用したら，Overpass API経由でOpenStreetMapのデータを簡単に読み込むことも可能だが，いつのデータが読み込まれているかが分からなった．（確認や指定する方法があるのかもしれないがぱっと見分からなかった）  \nそのため，今回は[geofabrik](https://download.geofabrik.de/asia/japan.html)からダウンロードできる.osm.pbfファイルを使用する．\n\n\n2通りの方法を行った．  \n1つ目は[osmread](https://pypi.org/project/osmread/)というPythonのライブラリを使用して，OSMのNode情報を取得し，DBに入れる方法．  \n2つ目はogr2ogrを使用してpbfファイルを[GeoJSON](https://ja.wikipedia.org/wiki/GeoJSON)に変換し，DBに入れる方法．\n\n## 方法1. osmreadを使用\n[osmread](https://pypi.org/project/osmread/)を使用して，MongoDBに入れる方法．\n\n```python\nfrom pymongo import MongoClient\nfrom osmread import parse_file, Node\n\ndef get_db(db_name):\n  client = MongoClient('mongodb://root:password@mongo:27017')\n  return client[db_name]\n\ndb = get_db('osm')\ncoll = db['osm_data']\n\nfile = parse_file('./shikoku-latest.osm.pbf')\nfor data in file:\n  if isinstance(data, Node) and len(data.tags.keys() & {'shop'}) > 0:\n    one_data = {\n      'tags':data.tags,\n      'lat':data.lat,\n      'lon':data.lon\n    }\n    coll.insert(one_data)\n```\n\n## 方法2. GeoJSON型に変換\n方法2つ目  \nogr2ogrを使用してpbfファイルを[GeoJSON](https://ja.wikipedia.org/wiki/GeoJSON)に変換し，MongoDBに入れる方法．\n\n\n最初にogr2ogrを使用して変換したいosm.pbfファイルをGeoJSONに変換する\n```bash\nogr2ogr -f GeoJSON point.json shikoku-latest.osm.pbf points\n```\n\n次にGeoJSONをMongoDBに入れる．  \nmongoimportを使用するので入っていない場合は別途インストールする．\n\n```bash\ncat shikoku-latest.json | jq -c '.features[]' | jq -c 'del(.type)' | mongoimport -u \"root\" -p \"password\" --authenticationDatabase \"admin\" --db points --collection data --type json\n```\n\nGeoJSONに変換してMongoDBに入れた場合，データ構造が理由で，ダブルコーテーションが入ってしまい，バックスラッシュでエスケープされている．  \nDBからデータを取って使用したい時にはちょっと手間がかかることになってしまう．\n\n```json\n{\n\t\"_id\" : ObjectId(\"5e2d060f4ad1536c68cd0143\"),\n\t\"properties\" : {\n\t\t\"osm_id\" : \"254449467\",\n\t\t\"other_tags\" : \"\\\"bridge\\\"=>\\\"yes\\\"\"\n\t},\n\t\"geometry\" : {\n\t\t\"type\" : \"Point\",\n\t\t\"coordinates\" : [ 134.01391850000002, 33.4288566 ]\n\t}\n}\n```\n"},"__N_SSG":true}