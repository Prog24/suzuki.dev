{"pageProps":{"frontmatter":{"title":"CentOS7にknowledgeインストール","date":"2018-02-18T10:00:00.000Z","template":"post","draft":false,"slug":"CentOS7-knowledge-install","category":"Web勉強","tags":["ConoHa","knowledge"],"description":"CentOS7にknowledgeインストール"},"markdownBody":"\nCentOS7にTomcat8 + knowledgeのセットアップ  \n今回は[knowledge](https://github.com/support-project/knowledge/)をCentOS7にセットアップする。knowledgeにはTomcatが動く環境が必要になるのでこれも一緒にセットアップする。\n\n## Java8インストール\n```bash\n>>> curl -LO -H \"Cookie: oraclelicense=accept-securebackup-cookie\" \\\n\"http://download.oracle.com/otn-pub/java/jdk/8u162-b12/0da788060d494f5095bf8624735fa2f1/jdk-8u162-linux-x64.rpm\"\n>>> rpm -Uvh jdk-8u162-linux-x64.rpm\n>>> vim /etc/profile\n# 下記を追記してパスを通す\nexport JAVA_HOME=/usr/java/default\nexport PATH=$PATH:$JAVA_HOME/bin\nexport CLASSPATH=.:$JAVA_HOME/jre/lib:$JAVA_HOME/lib:$JAVA_HOME/lib/tools.jar\nsource /etc/profile\n```\n\n## Tomcatのセットアップ\n```bash\n>>> curl -O http://ftp.jaist.ac.jp/pub/apache/tomcat/tomcat-8/v8.5.28/bin/apache-tomcat-8.5.28.tar.gz\n>>> tar zxvf apache-tomcat-8.5.28.tar.gz\n>>> mv apache-tomcat-8.5.28 /usr/libexec/tomcat8\n>>> useradd -M -d /usr/libexec/tomcat8 tomcat\n>>> chown -R tomcat. /usr/libexec/tomcat8\n>>> vim /usr/lib/systemd/system/tomcat8.service\n```\n\n```text\n[Unit]\nDescription=Apache Tomcat 8\nAfter=network.target\n\n[Service]\nType=oneshot\nExecStart=/usr/libexec/tomcat8/bin/startup.sh\nExecStop=/usr/libexec/tomcat8/bin/shutdown.sh\nRemainAfterExit=yes\nUser=tomcat\nGroup=tomcat\n\n[Install]\nWantedBy=multi-user.target\n```\n\n```bash\n>>> systemctl start tomcat8\n>>> systemctl enable tomcat8\n```\n\n## firewalldの設定\nTomcatは8080ポートで動くので8080ポートでアクセスができるようにする。\n```bash\n>>> firewall-cmd --zone=public --add-port=8080/tcp --permanent\n>>> firewall-cmd --reload\n```\n\n## knowledgeのセットアップ\nTomcatのwebappsフォルダにknowledgeのwarファイルを設置する。\n```bash\n>>> cd /usr/libexec/tomcat8/webapps\n>>> wget https://github.com/support-project/knowledge/releases/download/v1.12.0/knowledge.war\n```\n\n## Apacheとの連携\nApacheと連携することでドメインに「:8080」を書かなくてもアクセスできるようにする。\n```bash\n>>> vim /etc/httpd/conf.d/proxy-ajp.conf\n```\n\n```text\n<Location /knowledge >\n  ProxyPass ajp://localhost:8009/knowledge\n  Order allow,deny\n  Allow from all\n</Location>\n```\n\n```bash\n>>> vim /usr/libexec/tomcat8/conf/server.xml\n```\n以下のようにコメントアウトする\n```text\n<!--\n<Connector port=\"8080\" protocol=\"HTTP/1.1\"\n  connectionTimeout=\"20000\"\n  redirectPort=\"8443\" />\n-->\n```\n\n## 最後にApacheとTomcatの再起動\n最後にApacheとTomcatを再起動して完了\n"},"__N_SSG":true}