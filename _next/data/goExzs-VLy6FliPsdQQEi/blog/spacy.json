{"pageProps":{"frontmatter":{"title":"文章の平均ベクトルを求める(英語)","date":"2020-06-27T10:00:00.000Z","template":"post","draft":false,"slug":"spacy","category":"自然言語処理","tags":["Python","Word2vec"],"description":"Word2vecを用いて文章の平均ベクトルの計算を行う．"},"markdownBody":"Pythonで自然言語処理を行う際に，単語ごとにベクトル化してそれの平均を文章のベクトルとして扱いたい時のメモ\n\n\n※単語ごとの平均ベクトルを使用する以外にもDoc2Vecなどの使用もいいかもしれない．（学習済みモデルはあまりなかったり，学習のためのデータが集まらなかったりするかもしれないため，今回は単語ごとの平均ベクトルを求める）\n\n行うこと\n- [nltk](https://www.nltk.org/)で形態素解析\n- [spaCy](https://spacy.io/)で単語ごとにベクトル化\n- 文章の平均ベクトルを求める\n\n## 1. nltkで形態素解析\n今回は簡単に考えるため品詞情報は考えない．そのため，nltkのword_tokenizeを使用する\n```python\nimport nltk\nsentence = 'I am a cat.'\nwords = nltk.word_tokenize(sentence)\n\n>>> ['I', 'am', 'a', 'cat', '.']\n```\n\nこれで単語ごとに分ける作業が完了．\n\n## 2. spaCyで単語ごとにベクトル化\nspaCyを使用して単語ごとに数値ベクトルに変換する．今回はspaCyの提供している学習済みモデルを使用している．\n\n```python\nimport spacy\nimport numpy as np\nnlp = spacy.load('en')\nfeature_vecs = [nlp(word).vector for word in words]\n\n>>> [array([ 3.500103  , -2.4935763 , -2.675813  , -3.4373646 , -2.042331  ,\n        -2.046733  ,  2.9430969 ,  3.2413645 , -0.28074157, -0.38374954,\n         0.48055142, -0.41881254,  0.80175626,  1.346148  , -0.7809333 ,...\n```\n\n## 3. 文章の平均ベクトルを求める\n2で作成した単語ごとのベクトルの平均を求めて文章全体の平均ベクトルを求める．\n\n```python\nfeature_vec = np.zeros((96,), dtype=\"float32\")\ncnt = 0\nfor vec in feature_vecs:\n    feature_vec = np.add(feature_vec, vec)\n    cnt += 1\n\nfeature_vec = np.divide(feature_vec, cnt)\n\n>>> array([ 0.10911289, -0.04105245, -0.08416332, -0.05892473, -0.0499047 ,\n        0.002462  ,  0.1209574 ,  0.03958821,  0.01622647,  0.0801741 ,\n       -0.09445589, -0.00737678,  0.06189723, -0.00181926, -0.0798737 ,...\n```\n"},"__N_SSG":true}