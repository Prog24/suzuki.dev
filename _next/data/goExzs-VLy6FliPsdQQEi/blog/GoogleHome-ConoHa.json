{"pageProps":{"frontmatter":{"title":"Google HomeでConoHaの料金確認","date":"2017-12-18T10:00:00.000Z","template":"post","draft":false,"slug":"GoogleHome-ConoHa","category":"アドベントカレンダー","tags":["API","ConoHa","PHP"],"description":"Google HomeでConoHaの料金確認"},"markdownBody":"\nこれは[ConoHa Advent Calendar 2017](https://qiita.com/advent-calendar/2017/conoha) 18日目の記事です。\n## 今回作ったもの\nGoogle Homeでこのはちゃんへの貢ぎ度サーバ代金を確認するアプリです。  \nGoogle Homeに「料金教えて」と聞くとConoHaのサーバ料金を教えてくれるというものです。  \n今回は取り敢えずで作ったものなので完全個人向けで1つのアカウントのみに対応します。\n\n## 作り方（手順）\n- ConoHaのAPIを叩いて今月のサーバ代金をjson形式で返すプログラムの作成\n- 作成したプログラムを適当なサーバに転がす\n- Action on Googleとdialogflowの設定\n\n## ConoHaのAPIを叩いて今月のサーバ代金をjson形式で返すプログラムの作成\nConoHaのAPIを叩く処理は[1週間ほど前に行った](/posts/ConoHaのAPIに触れてみた)ので同じ感じに行った。  \n\nしかし、今回はjsonで返さないといけないので少しだけ修正。  \n修正後のコードはこんな感じになりました。ConoHaのAPI用のユーザ名などの情報は直書きしてしまっています。。多分よくないよね。。\n\n**※{“speach”, “話させる内容”} こういう形で返さないといけないということを知らなくて結構時間かけてしまいました。**\n\n```php\n<?php\n$username = \"ユーザ名\";\n$password = \"パスワード\";\n$tenantId = \"テナントID\";\nfunction getToken($username, $password, $tenantId)\n{\n\t$url = \"https://identity.tyo1.conoha.io/v2.0/tokens\";\n\t$headers = array(\n\t\t\"Accept: application/json\"\n\t);\n\t$req_data = array(\n\t\t\"auth\" => array(\n\t\t\t\"passwordCredentials\" => array(\n\t\t\t\t\"username\" => $username,\n\t\t\t\t\"password\" => $password\n\t\t\t),\n\t\t\t\"tenantId\" => $tenantId\n\t\t)\n\t);\n\t$ch = curl_init();\n    curl_setopt($ch, CURLOPT_URL, $url);\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\n    curl_setopt($ch, CURLOPT_POST, true);\n    curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($req_data));\n    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n    $res_json =  curl_exec($ch);\n    $res_data = json_decode($res_json);\n    curl_close($ch);\n    return $res_data;\n}\nfunction getPayList($token, $tenantId)\n{\n    $url = \"https://account.tyo1.conoha.io/v1/{$tenantId}/billing-invoices?limit=3\";\n    $headers = array(\n        \"Accept: application/json\",\n        \"X-Auth-Token: {$token}\"\n    );\n    $curl = curl_init();\n    curl_setopt($curl, CURLOPT_URL, $url);\n    curl_setopt($curl, CURLOPT_CUSTOMREQUEST, 'GET');\n    curl_setopt($curl, CURLOPT_HTTPHEADER, $headers);\n    curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n    $response = curl_exec($curl);\n    return $response;\n}\nfunction makeJson($data)\n{\n\treturn json_encode($data);\n}\n$tokens = getToken($username, $password, $tenantId);\n$token = $tokens->access->token->id;\n$data = getPayList($token, $tenantId);\n$array = json_decode($data);\n$pay = $array->billing_invoices[0]->bill_plus_tax;\n$say_content = array(\n\t'speech' => $pay . \"円です\"\n);\necho makeJson($say_content);\n```\n\n上記のコードを叩くとConoHaの料金を  \n{“speech”:”○○円です”} という形で返してくれるというものになります。  \nコードにユーザIDなどを直書きしているので他人に叩かれたら色々バレるので気をつけましょう。\n\n## 作成したプログラムを適当なサーバに転がす\n今回は先ほど作成したプログラムを叩いて返ってきた内容をそのまま話させるというものなのでどこかサーバに置かなきゃなぁ。。となりました。  \nまあ、このはちゃんに置いたらいいのかなとも思いましたが、このためにこのはちゃんに貢ぐのもアレなので別で契約しているサーバに起きました。\n\n## Action on Googleとdialogflowの設定\n次に、先ほど作成したプログラムをGoogle Homeで叩けるようにする。  \n\n最初に[Action on Googleのコンソール画面](https://console.actions.google.com/)に行く。\n![1](/media/GoogleHome-ConoHa/conoha-advent1.png)\n\n「Add/import Project」をクリックしてプロジェクトの追加を行う。  \n今回はProject nameをConoHa、言語を日本語に設定した。\n\n![2](/media/GoogleHome-ConoHa/conoha-advent2.png)\n\nプロジェクトを作成したらいくつか選択肢が出てくるので今回は「Dialogflow」を選択してアプリを作っていきます。\n\n![3](/media/GoogleHome-ConoHa/conoha-advent3.png)\n\nDialogflowのページに行ったらアプリ名をConoHa（おそらくデフォルトで設定されているはず）、言語を日本語に設定してCREATEボタンを押します。  \nこの時、デフォルトの言語は日本語ではなくなっているので変更を忘れないように注意しないといけません。\n\n![4](/media/GoogleHome-ConoHa/conoha-advent4.png)\n\n次に、左メニューの「Fulfillment」をクリックし、webhookの設定を書きます。  \n最初に作成したプログラムを置いたURLを指定します。\n\n![5](/media/GoogleHome-ConoHa/conoha-advent6.png)\n\n次に左メニューの「Intents」に行き、ユーザの言葉に対する動作を設定します。  \n今回は「料金教えて」と話されたら、先ほど設定したwebhookで返って来たデータを喋らせる。という動作をさせたいので画像のように設定しました。  \n※Fulfillmentの項目でUse webhookを選択したらResponseに何を書いてもwebhookの返答しか返ってこないようでした。\n\n![6](/media/GoogleHome-ConoHa/conoha-advent7.png)\n\n最後に左メニューのIntegrationsでGoogle Assistantと連携させたらDialogflowの設定は完了です。  \n\nIntegrationsのページでGoogle Assistantを選択し、UPDATE DRAFTを押します。\n\n![7](/media/GoogleHome-ConoHa/conoha-advent8.png)\n\n![8](/media/GoogleHome-ConoHa/conoha-advent9.png)\n\n## 完成\nこれで一応完成です。  \nActions on Googleのコンソールページに戻り、シミュレータで動作確認をします。  \n現状、アプリの呼び出し設定ができていないので「テスト用アプリにつないで」という呼び出し方しかできません。  \n設定しようとしたのですが、項目が多くてよく分からなかったです。また後でやります。\n\n![9](/media/GoogleHome-ConoHa/conoha-advent12.png)\n\nそして、こんな感じに「料金教えて」と言えば前回支払いのサーバ代金を答えてくれます。  \nGoogle Homeにアカウントを紐付ければ同じように使用することが出来ました。\n\n![10](/media/GoogleHome-ConoHa/conoha-advent13.png)\n\n「1円です」。。。ここ最近ConoHaでサーバを立てていませんでした。。。\n\n## まとめ\n今回は「前回までの支払い情報を取得する」APIを使用して一応動作したので、別のAPIも使用してGoogle Home経由でこのはちゃんに色々してもらえるようにしていこうと思います。\n"},"__N_SSG":true}